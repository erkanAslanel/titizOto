@model tbl_user

@{
    ViewBag.Title = tbl_email.getClassTitle() + " Düzenle";
    Layout = "~/Areas/radmin/Views/Shared/_LayoutPageAdmin.cshtml"; 
}

@if (ViewBag.success != null)
{
    
    @Html.Raw(ViewBag.resultHtml)
}


@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "mainForm" }))
{  
    @Html.ValidationSummary(null, new { @class = "validationInfo hideit" }) 
    
    <div class="title">
        <h5>@tbl_user.getClassTitle() Düzenleme</h5>
    </div> 

    <!--Upload-->
    @Html.AntiForgeryToken()

    
    <fieldset>
        <div class="widget">

            <!--Tabs-->
            <ul class="tabs">
                <li><a href="#tab1">İçerik</a></li>

            </ul>

            <!--Column-->
            <div class="tab_container">

                <div id="tab1" class="tab_content">

                    <!--userId -->
                    @Html.HiddenFor(a => a.userId, new { @id = "primaryKey" })

                    <!--userTypeId -->
                    <div class="rowElem">@Html.LabelFor(a => a.userTypeId)<div class="formRight">@Html.DropDownList("userTypeId", new SelectList(Model.userTypeIdList(), "key", "value"), new { change = "Alert('test');" })
                    </div>
                        <div class="fix"></div>
                    </div>


                    <!--registerStatuId -->
                    <div class="rowElem">@Html.LabelFor(a => a.registerStatuId)<div class="formRight">@Html.DropDownList("registerStatuId", new SelectList(Model.registerStatuList(), "key", "value"))
                    </div>
                        <div class="fix"></div>
                    </div>

                    <!--name -->
                    <div class="rowElem">@Html.LabelFor(a => a.name)<div class="formRight">@Html.TextBoxFor(a => a.name)<label
                        class="error">@Html.ValidationMessageFor(a => a.name)</label>
                    </div>
                        <div class="fix"></div>
                    </div>

                    <!--guid -->
                    @Html.HiddenFor(a => a.guid, new { @id = "primaryKey" })

                    <!--surname -->
                    <div class="rowElem">@Html.LabelFor(a => a.surname)<div class="formRight">@Html.TextBoxFor(a => a.surname)<label
                        class="error">@Html.ValidationMessageFor(a => a.surname)</label>
                    </div>
                        <div class="fix"></div>
                    </div>


                    <!--email -->
                    <div class="rowElem">@Html.LabelFor(a => a.email)<div class="formRight">@Html.TextBoxFor(a => a.email)<label
                        class="error">@Html.ValidationMessageFor(a => a.email)</label>
                    </div>
                        <div class="fix"></div>
                    </div>


                    <!--Md5Converter && isPasswordUpdate -->
                    <div class="rowElem">@Html.LabelFor(a => a.Md5Converter)<div class="formRight botDir"
                        title="Güncelleme işaretlenmediğinde bu alanlarla ilgili işlem yapılmayacaktır.">

                        @Html.CheckBoxFor(a => a.isPasswordUpdate)  @Html.LabelFor(a => a.isPasswordUpdate)
                        @Html.TextBoxFor(a => a.Md5Converter)<label
                            class="error">@Html.ValidationMessageFor(a => a.Md5Converter)</label>
                    </div>
                        <div class="fix"></div>
                    </div>


                    <!--password -->
                    @Html.HiddenFor(a => a.password, new { @id = "primaryKey" })

                    <!--birthday --> 
                    <div class="rowElem">@Html.LabelFor(a => a.birthday)<div class="formRight botDir"
                        title="Güncelleme işaretlenmediğinde bu alanlarla ilgili işlem yapılmayacaktır.">
                     
                        @if (Model.birthday.HasValue)
                        {
                            @Html.TextBox("birthday", Model.birthday.Value.ToString("dd.MM.yyyy"), new { @class = "datepickerInline" })
                        }
                        else
                        {
                            @Html.TextBox("birthday", null, new { @class = "datepickerInline" })
                        }

                        <label
                            class="error">@Html.ValidationMessageFor(a => a.birthday)</label>
                    </div>
                        <div class="fix"></div>
                    </div>

                    <!--gender -->
                    <div class="rowElem">@Html.LabelFor(a => a.gender)<div class="formRight botDir" title="Güncelleme işaretlenmediğinde bu alanlarla ilgili işlem yapılmayacaktır.">


                        <select name="gender">
                            <option value="1" selected="@(Model.gender.HasValue && Model.gender.Value == 1)">Erkek</option>
                            <option value="2" selected="@(Model.gender.HasValue && Model.gender.Value == 2)">Kadın</option>
                        </select>

                        <label
                            class="error">@Html.ValidationMessageFor(a => a.gender)</label>
                    </div>
                        <div class="fix"></div>
                    </div>

                </div>
            </div>
            <div class="fix"></div>
        </div>
    </fieldset>
    
    
    <div class="fix" style="height: 20px"></div>
   
    <!--Buttons-->
                      
    <input type="submit" value="Kaydet" class="redBtn submitForm" />
                       
    <a class="greyishBtn button floatright" href="@Url.Action("Index")" >Geri Dön </a>    
    
}